

// apply plugin: 'java'
// apply plugin: 'org.springframework.boot'
// apply plugin: 'io.spring.dependency-management'

// group = 'org.richard.coffeeshop'
// version = '0.0.1-SNAPSHOT'
// sourceCompatibility = '11'

repositories {
	mavenCentral()
}

// dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// implementation 'org.springframework.boot:spring-boot-starter-web'
	// runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	// compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
	// compileOnly 'org.projectlombok:lombok'
	// testImplementation 'org.springframework.boot:spring-boot-starter-test'
// }

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenLocal()
         jcenter()
        mavenCentral()
    }
    dependencies {
        classpath(
          "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'


subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    afterEvaluate {

        repositories {
            jcenter()
            mavenCentral()
        }
        
        dependencies {
            compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.4.0-b180830.0438'

            testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"

            testCompileOnly "junit:junit:4.12"
            testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.2"
        }

        compileJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                ]
                classpath = files()
            }
        }

        compileTestJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'junit',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
                ]
                classpath = files()
            }
        }

        test {
            useJUnitPlatform()

            //  filter {
            //     exclude '**/module-info.class'
            // }

            inputs.property("moduleName", moduleName)
            doFirst {
                jvmArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'ALL-MODULE-PATH',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
                ]
                classpath = files()
            }
        }
    }
}
// task wrapper(type: Wrapper) {
//        gradleVersion = '5.1.1'
//    }
//}
